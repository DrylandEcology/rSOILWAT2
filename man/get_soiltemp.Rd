% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sw_OutputDerived_Functions.R
\name{get_soiltemp}
\alias{get_soiltemp}
\title{Extract soil temperature}
\usage{
get_soiltemp(
  x,
  timestep = c("Day", "Week", "Month", "Year"),
  levels = c("min", "avg", "max"),
  surface = TRUE,
  soillayers = NULL,
  verbose = FALSE
)
}
\arguments{
\item{x}{An object of class \code{\linkS4class{swOutput}}.}

\item{timestep}{A character string. One of the \pkg{rSOILWAT2} time steps.}

\item{levels}{A character string indicating which
within-day minimum, average, or maximum values are requested.}

\item{surface}{A logical value. Output surface soil temperature as first
column in returned matrices;
equivalent to requesting a \code{0} via \code{soillayers}.}

\item{soillayers}{An integer vector of requested soil layers.
\code{NULL} returns soil temperature from all available soil layers;
\code{NA} does not return soil temperature;
including a \code{0} is equivalent to setting \code{surface} to \code{TRUE}.}

\item{verbose}{A logical value. Issue warnings if requested \code{levels} are
not available.}
}
\value{
A named list of length \code{levels} where elements are
numeric matrices of soil temperature \verb{[C]} with time steps as rows
and (requested) soil surface and soil layers as columns.
}
\description{
Extract soil temperature
}
\section{Notes}{

Requested \code{soillayers} that are not available in \code{x} are ignored
(with a warning if \code{verbose}).


Requested \code{levels} that are not available
(e.g., \code{"min"} before \code{rSOILWAT2} \code{v3.5.0})
are replaced by values from the average level
(with a warning if \code{verbose}).
}

\examples{
sw_out <- sw_exec(inputData = rSOILWAT2::sw_exampleData)
get_soiltemp(sw_out, "Month")
get_soiltemp(sw_out, "Month", "avg")
get_soiltemp(sw_out, "Month", "avg", surface = TRUE, soillayers = NA)
get_soiltemp(sw_out, "Month", "avg", soillayers = 0)
get_soiltemp(sw_out, "Month", "avg", surface = FALSE, soillayers = NULL)
get_soiltemp(sw_out, "Month", "avg", surface = FALSE, soillayers = c(1, 3))
get_soiltemp(sw_out, "Month", "avg", surface = FALSE, soillayers = c(1, 30))

}
