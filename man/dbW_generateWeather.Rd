% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swWeatherGenerator.R
\name{dbW_generateWeather}
\alias{dbW_generateWeather}
\title{Generate daily weather data using SOILWAT2's weather generator}
\usage{
dbW_generateWeather(
  weatherData,
  years = NULL,
  wgen_coeffs = NULL,
  imputation_type = "mean",
  imputation_span = 5L,
  seed = NULL
)
}
\arguments{
\item{weatherData}{A list of elements of class
\code{\linkS4class{swWeatherData}} or a \code{data.frame} as returned by
\code{\link{dbW_weatherData_to_dataframe}}.}

\item{years}{An integer vector. The calendar years for which to generate
daily weather. If \code{NULL}, then extracted from \code{weatherData}.}

\item{wgen_coeffs}{A list with two named elements \var{mkv_doy} and
\var{mkv_woy}, i.e., the return value of
\code{\link{dbW_estimate_WGen_coefs}}. If \code{NULL}, then determined
based on \code{weatherData}.}

\item{imputation_type}{A character string describing the imputation method;
 currently, one of three values: \describe{
   \item{\var{"none"}}{no imputation is carried out;}
   \item{\var{"mean"}}{missing values will be replaced by the average
     of \code{imputation_span} non-missing values before and
     \code{imputation_span} non-missing values after; note:
     this may fail if there are less than \code{2 * imputation_span}
     non-missing values;}
   \item{\var{"locf"}}{missing values will be replaced by the
     \var{"last-observation-carried-forward"} imputation method.}
}}

\item{imputation_span}{An integer value. The number of non-missing values
considered if \code{imputation_type = "mean"}.}

\item{seed}{An integer value or \code{NULL}. See \code{\link{set.seed}}.}
}
\value{
A list of elements of class \code{\linkS4class{swWeatherData}}.
}
\description{
This function is a convenience wrapper for
\code{\link{dbW_estimate_WGen_coefs}}.
}
\examples{
# Load data for 1949-2010
wdata <- data.frame(dbW_weatherData_to_dataframe(rSOILWAT2::weatherData))

# Treat data for 2005-2010 as our 'dataset'
ids <- wdata[, "Year"] >= 2005
x <- wdata[ids, ]

# Set June-August of 2008 as missing
ids <- x[, "Year"] == 2008 & x[, "DOY"] >= 153 & x[, "DOY"] <= 244
x[ids, -(1:2)] <- NA

## Example 1: generate weather for any missing values in our 'dataset'
wout1 <- dbW_generateWeather(x)

## Example 2: generate weather based on our 'dataset' but for
## years 2005-2015 and use estimated weather generator coefficients from
## a different dataset
wgen_coeffs <- dbW_estimate_WGen_coefs(
  wdata,
  imputation_type = "mean",
  imputation_span = 5
)

# Set seed to make output reproducible
wout2 <- dbW_generateWeather(
  x,
  years = 2005:2015,
  wgen_coeffs = wgen_coeffs,
  seed = 123
)

## Example 3: generate weather based only on estimated weather generator
## coefficients from a different dataset
x_empty <- list(new("swWeatherData"))
wout3 <- dbW_generateWeather(
  x_empty,
  years = 2050:2055,
  wgen_coeffs = wgen_coeffs,
  seed = 123
)

## Compare input weather with generated weather
path <- tempdir()
compare_weather(
  ref_weather = x,
  weather = dbW_weatherData_to_dataframe(wout1),
  N = 1,
  path = path,
  tag = "Example1-WeatherGenerator"
)
unlink(list.files(path), force = TRUE)

}
